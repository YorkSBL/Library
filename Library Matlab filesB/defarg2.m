function defarg( arg, val, nullok )% DEFARG  Assign a default value to an argument.%% defarg( arg, val, nullok )%     <arg> is the string name of the argument%     <val> is the value to be assigned to <arg> if either %         (1) <arg> does not exist or (2) it exists but is empty.%         Condition (2) is voided if nullok is true.%% e.g., defarg( 'a', -1 )%       defarg( 'A.b', 'astringvalue' )%       defarg( 'c', 1:5 )% By C.A.Shera % Based on original version by "RFM".if (nargin < 3),  nullok = false;end% are we assigning a field of a structure?p = strfind(arg,'.');if (isempty(p))                         % no, we're not  if ( evalin('caller',sprintf('~exist(''%s'',''var'')',arg)) || ...        ( evalin('caller',sprintf('isempty(%s)',arg)) && ~nullok ))    assignin('caller',arg,val);  endelse                                    % yes, we are  base = arg(1:p(1)-1);  rest = arg(p(1)+1:end);  baseexists = evalin('caller',sprintf('exist(''%s'',''var'')',base));  if (baseexists)    fieldexists = evalin('caller',sprintf('issubfield(%s,''%s'')',base,rest));  end  if (baseexists & fieldexists & ~nullok)    % if it's not ok that the field exists but is empty, then pretend    % the field doesn't really exist    fieldexists = evalin('caller', ...                       sprintf('isusedfield(%s,''%s'')',base,rest));  end  assignit = ~baseexists || ~fieldexists;  if (assignit)    % this kludgy roundabout method is needed because assignin    % cannot assign values to structures    tmpvar = evalin('caller','matlab.lang.makeUniqueStrings(''XXXX'',who);');    assignin('caller',tmpvar,val);    evalin('caller',sprintf('%s=%s;',arg,tmpvar));    evalin('caller',sprintf('clear %s;',tmpvar));  endendreturn